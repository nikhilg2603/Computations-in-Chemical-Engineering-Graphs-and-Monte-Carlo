SOLUTIONS: LINKED LISTS




Q1)
ListNode* deleteMiddle(ListNode* head)
{
if (head == nullptr || head->next == nullptr)
{
return nullptr;
}
ListNode* fast=head;
ListNode* slow=head;
ListNode* prev=nullptr;
while(fast != nullptr && fast->next != nullptr)
{
prev=slow;
slow=slow->next;
fast=fast->next->next;
}
if (prev != nullptr)
{
prev->next = slow->next;
delete slow;
}
else
{
ListNode* temp = head;
head = head->next;
delete temp;
}
return head;
}


Q2)
ListNode* mergeTwoLists(ListNode* list1, ListNode* list2)
{
ListNode* dummy = new ListNode(0);
ListNode* current = dummy;


while (list1 != nullptr && list2 != nullptr)
{
if (list1->val < list2->val)
{
current->next = list1;
list1 = list1->next;
}
else
{
current->next = list2;
list2 = list2->next;
}
current = current->next;
}
if (list1 != nullptr)
{
current->next = list1;
}
else
{
current->next = list2;
}
ListNode* mergedList = dummy->next;
delete dummy;
return mergedList;
}




Q3)
